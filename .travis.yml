#language: julia
#os:
#  - linux
#  - osx
#julia:
#  - 0.4
## - nightly  # need to fix this
#
#notifications:
#  email: false
#
#before_install:
#  - if [ `uname` = "Linux" ]; then
#      sudo apt-get update -qq;
#      sudo apt-get install build-essential gfortran perl g++ gcc cmake m4 git;
#      sudo apt-get install -y liblapack-dev liblapack-doc liblapack3gf;
#      sudo apt-get install -y libblas-dev libblas-doc libblas3gf;
#      echo `pwd`;
#    fi
#install:
#  - ls ./deps
#  - ls -lh ./deps/travis-install-mpi.sh
#  - if [ `uname` = "Linux" ]; then
#      sudo ./deps/travis-install-mpi.sh mpich3;
#    elif [ `uname` = "Darwin" ]; then
#      sudo ./deps/travis-install-mpi.sh openmpi;
#    fi
## uncomment the following lines to override the default test script
#script:
#  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
#  - julia --check-bounds=yes -e 'Pkg.clone(pwd()); Pkg.build("PETSc")'
#  - echo $HOME
#  - echo `pwd`
#  - julia --check-bounds=yes -e 'Pkg.test("PETSc"; coverage=true)'
##  - julia --check-bounds=yes ./test/test_singlereal.jl
#
#after_success:
#  - echo $TRAVIS_JULIA_VERSION
#  - julia -e 'Pkg.add("Coverage"); cd(Pkg.dir("PETSc")); using Coverage; Coveralls.submit(process_folder()); Codecov.submit(process_folder())'
#  - julia -e 'Pkg.clone("https://github.com/MichaelHatherly/Documenter.jl")'
#  - julia -e 'cd(Pkg.dir("PETSc")); include(joinpath("docs", "make.jl"))'
#

# Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
os:
  - linux
dist: bionic
julia:
  - 1.4
addons:
 apt:
   update: true
   packages:
   - openmpi-bin
   - libopenmpi-dev
   - petsc-dev
notifications:
  email:
    on_success: never
    on_failure: always
before_script:
  - export JULIA_MPI_BINARY="system"
  - export JULIA_PETSC_RealDouble_DIR="/usr/lib/petsc/"
  - export JULIA_PETSC_RealDouble_ARCH=""
  - export JULIA_PETSC_RealDouble_LIBNAME="libpetsc_real"
  - export JULIA_PETSC_RealSingle_NOBUILD="1"
  - export JULIA_PETSC_ComplexDouble_NOBUILD="1"
after_success:
  - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())'
jobs:
  fast_finish: true
  include:
    - stage: Documentation
      julia: 1.4
      script: julia --project=docs -e '
          using Pkg;
          Pkg.develop(PackageSpec(path=pwd()));
          Pkg.instantiate();
          include("docs/make.jl");'
      after_success: skip
